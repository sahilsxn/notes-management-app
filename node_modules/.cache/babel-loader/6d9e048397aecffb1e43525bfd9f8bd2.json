{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 2/notes-management-app/src/Components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport axios from '../config/axios';\nimport validator from 'validator';\nimport '../CSS/register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const errors = {};\n\n  const runValidations = () => {\n    if (username.trim().length === 0) {\n      errors.username = 'Name cannot be blank';\n    }\n\n    if (email.trim().length === 0) {\n      errors.email = 'Email cannot be blank';\n    } else if (!validator.isEmail(email)) {\n      errors.email = \"Invalid email format\";\n    }\n\n    if (password.trim().length === 0) {\n      errors.password = 'Password cannot be blank';\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    runValidations();\n\n    if (Object.keys(errors).length === 0) {\n      setFormErrors({});\n      const formData = {\n        username: username,\n        email: email,\n        password: password\n      }; // console.log(formData)\n\n      axios.post('/users/register', formData).then(response => {\n        const result = response.data;\n\n        if (result.hasOwnProperty('errors')) {\n          alert(result.message);\n        } else {\n          alert('Account successfully created');\n          setUsername('');\n          setEmail('');\n          setPassword('');\n          props.history.push('/login');\n        }\n      }).catch(err => {\n        window.alert(err.message);\n      });\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const handleChange = e => {\n    if (e.target.name === \"username\") {\n      setUsername(e.target.value);\n    } else if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Register-form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        borderStyle: 'solid',\n        borderRadius: '16px',\n        borderColor: '#E6E6E6',\n        padding: '16px',\n        paddingBottom: '32px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          paddingBottom: '16px',\n          textAlign: 'center'\n        },\n        children: \"Register with Us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-floating mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: username,\n            onChange: handleChange,\n            placeholder: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), \" \", formErrors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formErrors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 52\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-floating mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            value: email,\n            onChange: handleChange,\n            placeholder: \"Enter Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this), \" \", formErrors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formErrors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 49\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-floating mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: handleChange,\n            placeholder: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), \" \", formErrors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formErrors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 52\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            class: \"btn btn-primary\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"1PtsMrulTBCCg9an0nJ5bm0UDzo=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/notes-management-app/src/Components/Register.js"],"names":["React","useState","axios","validator","Register","props","username","setUsername","email","setEmail","password","setPassword","formErrors","setFormErrors","errors","runValidations","trim","length","isEmail","handleSubmit","e","preventDefault","Object","keys","formData","post","then","response","result","data","hasOwnProperty","alert","message","history","push","catch","err","window","handleChange","target","name","value","borderStyle","borderRadius","borderColor","padding","paddingBottom","textAlign"],"mappings":"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","sourcesContent":["import {React, useState} from \"react\";\nimport axios from '../config/axios'\nimport validator from 'validator';\nimport '../CSS/register.css'\n\nconst Register = (props) => {\n    \n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [formErrors, setFormErrors] = useState({})\n\n    const errors = {}\n\n    const runValidations = () => {\n        if(username.trim().length === 0){\n            errors.username = 'Name cannot be blank'\n        }\n        if(email.trim().length === 0){\n            errors.email = 'Email cannot be blank'\n        } else if (!validator.isEmail(email)) {\n            errors.email = \"Invalid email format\"\n        }\n        if(password.trim().length === 0){\n            errors.password = 'Password cannot be blank'\n        }\n    }\n\n    const handleSubmit = (e) => {\n        \n        e.preventDefault()\n        \n        runValidations()\n\n        if (Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n                username: username,\n                email: email,\n                password: password\n            }\n            \n            // console.log(formData)\n\n            axios.post('/users/register', formData)\n            .then((response)=>{\n                const result = response.data\n                if (result.hasOwnProperty('errors')){\n                    alert(result.message)\n                } else {\n                    alert('Account successfully created')\n                    setUsername('')\n                    setEmail('')\n                    setPassword('')\n                    props.history.push('/login')\n                }\n            })\n            .catch((err)=>{\n                window.alert(err.message)\n            })\n\n        } else {\n            setFormErrors(errors)\n        }\n    }\n\n    const handleChange = (e) => {\n\n        if (e.target.name === \"username\"){\n            setUsername(e.target.value)\n        } else if (e.target.name === \"email\") {\n            setEmail(e.target.value)\n        } else if (e.target.name === \"password\") {\n            setPassword(e.target.value)\n        }\n    }\n\n    return (\n        <div className=\"Register-form\">\n            <div style={{borderStyle:'solid', borderRadius:'16px', borderColor:'#E6E6E6', padding:'16px', paddingBottom:'32px'}}>\n                <h2 style={{paddingBottom:'16px', textAlign: 'center'}}>Register with Us</h2>\n                <form onSubmit={handleSubmit}>\n                    <div class=\"form-floating mb-1\">\n                    <input \n                        type=\"text\" \n                        name=\"username\" \n                        value={username} \n                        onChange={handleChange} \n                        placeholder=\"Enter Username\"\n                        /> {formErrors.username && <span>{formErrors.username}</span>} <br/>\n                    </div>\n                    <div class=\"form-floating mb-1\">\n                    <input \n                        type=\"text\" \n                        name=\"email\" \n                        value={email} \n                        onChange={handleChange} \n                        placeholder=\"Enter Email\"\n                        /> {formErrors.email && <span>{formErrors.email}</span>} <br/>\n                    </div>\n                    <div class=\"form-floating mb-1\">\n                    <input \n                        type=\"password\" \n                        name=\"password\" \n                        value={password} \n                        onChange={handleChange} \n                        placeholder=\"Enter Password\"\n                        /> {formErrors.password && <span>{formErrors.password}</span>} <br/>\n                    </div>\n                    <div>\n                    <input class=\"btn btn-primary\" type=\"submit\"/>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}