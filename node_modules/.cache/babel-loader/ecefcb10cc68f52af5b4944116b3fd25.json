{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 2/user-auth/src/Components/Notebook.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport NoteForm from './NoteForm';\nimport NotesList from './NotesList';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteBook = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [notesList, setNotesList] = useState([]);\n  const [formErrors, setFormErrors] = useState({});\n  const errors = {};\n\n  const runValidations = () => {\n    if (title.trim().length === 0) {\n      errors.title = 'Title cannot be blank';\n    }\n  };\n\n  useEffect(() => {\n    axios.get('http://dct-user-auth.herokuapp.com/api/notes', {\n      headers: {\n        'x-auth': localStorage.getItem('token')\n      }\n    }).then(response => {\n      console.log(response.data);\n      const result = response.data;\n      setNotesList(result);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [title, body]);\n\n  const handleChange = e => {\n    if (e.target.name === \"title\") {\n      setTitle(e.target.value);\n    } else if (e.target.name === \"body\") {\n      setBody(e.target.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    runValidations();\n\n    if (Object.keys(errors).length === 0) {\n      setFormErrors({});\n      const formData = {\n        title: title,\n        body: body\n      };\n      console.log(formData);\n      axios.post('http://dct-user-auth.herokuapp.com/api/notes', formData, {\n        headers: {\n          'x-auth': localStorage.getItem('token')\n        }\n      }).then(response => {\n        console.log(response.data);\n      }).catch(err => {\n        alert(err);\n      });\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const removeItem = id => {\n    const result = notesList.filter(note => {\n      return note._id !== id;\n    });\n    setNotesList(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signed In - My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      title: title,\n      body: body,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      formErrors: formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notesList: notesList,\n      removeItem: removeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteBook, \"GfCFX7VTQAVZrXzqRYtblyYUAJI=\");\n\n_c = NoteBook;\nexport default NoteBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteBook\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/user-auth/src/Components/Notebook.js"],"names":["React","useState","useEffect","NoteForm","NotesList","axios","NoteBook","props","title","setTitle","body","setBody","notesList","setNotesList","formErrors","setFormErrors","errors","runValidations","trim","length","get","headers","localStorage","getItem","then","response","console","log","data","result","catch","err","handleChange","e","target","name","value","handleSubmit","preventDefault","Object","keys","formData","post","alert","removeItem","id","filter","note","_id"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from \"react\";\nimport NoteForm from './NoteForm'\nimport NotesList from './NotesList'\nimport axios from \"axios\";\n\nconst NoteBook = (props) => {\n\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [notesList, setNotesList] = useState([])\n    const [formErrors, setFormErrors] = useState({})\n\n    const errors = {}\n\n    const runValidations = () => {\n        if(title.trim().length === 0){\n            errors.title = 'Title cannot be blank'\n        }\n    }\n\n    useEffect(()=>{\n        axios.get('http://dct-user-auth.herokuapp.com/api/notes', {\n            headers: {\n                'x-auth': localStorage.getItem('token')\n            }\n        })\n        .then((response)=>{\n            console.log(response.data)\n            const result = response.data\n            setNotesList(result)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    },[title,body])\n\n    const handleChange = (e) => {\n        if (e.target.name === \"title\"){\n            setTitle(e.target.value)\n        } else if (e.target.name === \"body\") {\n            setBody(e.target.value)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        runValidations()\n\n        if (Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n                title: title,\n                body:body\n            }\n            console.log(formData)\n            axios.post('http://dct-user-auth.herokuapp.com/api/notes', formData, {\n                headers: {\n                    'x-auth': localStorage.getItem('token')\n                }\n            })\n            .then((response)=>{\n                console.log(response.data)\n            })\n            .catch((err)=>{\n                alert(err)\n            })\n        } else {\n            setFormErrors(errors)\n        }\n    }\n\n    const removeItem = (id) => {\n        const result = notesList.filter(note=>{\n            return note._id !== id\n        })\n        setNotesList(result)\n    }\n\n    return (\n        <div>\n            <h1>Signed In - My Notes</h1>\n            <NoteForm title={title} body={body} handleChange={handleChange} handleSubmit={handleSubmit} formErrors={formErrors}/>\n            <NotesList notesList={notesList} removeItem={removeItem}/>\n        </div>\n    )\n}\n\nexport default NoteBook"]},"metadata":{},"sourceType":"module"}