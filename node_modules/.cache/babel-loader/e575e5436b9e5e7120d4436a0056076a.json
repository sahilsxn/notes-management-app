{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 2/user-auth/src/Components/Login.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport validator from 'validator';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [formErrors, setFormErrors] = useState({});\n  const errors = {};\n\n  const runValidations = () => {\n    if (email.trim().length === 0) {\n      errors.email = 'Email cannot be blank';\n    } else if (!validator.isEmail(email)) {\n      errors.email = \"Invalid email format\";\n    }\n\n    if (password.trim().length === 0) {\n      errors.password = 'Password cannot be blank';\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    runValidations();\n\n    if (Object.keys(errors).length === 0) {\n      setFormErrors({});\n      const formData = {\n        email: email,\n        password: password\n      };\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const handleChange = e => {\n    if (e.target.name === \"email\") {\n      setEmail(e.target.value);\n    } else if (e.target.name === \"password\") {\n      setPassword(e.target.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        placeholder: \"Enter Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \" \", formErrors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formErrors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 78\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        placeholder: \"Enter Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), \" \", formErrors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: formErrors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 48\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 84\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"7JhmyiDa3qgJQTeX+GWpD1ST8No=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/user-auth/src/Components/Login.js"],"names":["React","useState","validator","axios","Login","props","email","setEmail","password","setPassword","formErrors","setFormErrors","errors","runValidations","trim","length","isEmail","handleSubmit","e","preventDefault","Object","keys","formData","handleChange","target","name","value"],"mappings":"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","sourcesContent":["import {React, useState} from \"react\";\nimport validator from 'validator';\nimport axios from 'axios'\n\nconst Login = (props) => {\n    \n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [formErrors, setFormErrors] = useState({})\n\n    const errors = {}\n\n    const runValidations = () => {\n        if(email.trim().length === 0){\n            errors.email = 'Email cannot be blank'\n        } else if (!validator.isEmail(email)) {\n            errors.email = \"Invalid email format\"\n        }\n        if(password.trim().length === 0){\n            errors.password = 'Password cannot be blank'\n        }\n    }\n\n    const handleSubmit = (e) => {\n        \n        e.preventDefault()\n        \n        runValidations()\n\n        if (Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n                email: email,\n                password: password\n            }\n\n\n            \n\n        } else {\n            setFormErrors(errors)\n        }\n    }\n\n    const handleChange = (e) => {\n\n        if (e.target.name === \"email\") {\n            setEmail(e.target.value)\n        } else if (e.target.name === \"password\") {\n            setPassword(e.target.value)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\" \n                    name=\"email\" \n                    value={email} \n                    onChange={handleChange} \n                    placeholder=\"Enter Email\"\n                    /> {formErrors.email && <span>{formErrors.email}</span>} <br/>\n                \n                <input \n                    type=\"text\" \n                    name=\"password\" \n                    value={password} \n                    onChange={handleChange} \n                    placeholder=\"Enter Password\"\n                    /> {formErrors.password && <span>{formErrors.password}</span>} <br/>\n                <input type=\"submit\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}