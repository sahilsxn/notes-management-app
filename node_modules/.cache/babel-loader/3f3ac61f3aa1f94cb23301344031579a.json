{"ast":null,"code":"import _slicedToArray from\"/Users/macbook/Documents/GitHub/React 2/task-management-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{React,useState}from\"react\";import axios from'axios';import validator from'validator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=function Register(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),username=_useState2[0],setUsername=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState({}),_useState8=_slicedToArray(_useState7,2),formErrors=_useState8[0],setFormErrors=_useState8[1];var errors={};var runValidations=function runValidations(){if(username.trim().length===0){errors.username='Name cannot be blank';}if(email.trim().length===0){errors.email='Email cannot be blank';}else if(!validator.isEmail(email)){errors.email=\"Invalid email format\";}if(password.trim().length===0){errors.password='Password cannot be blank';}};var handleSubmit=function handleSubmit(e){e.preventDefault();runValidations();if(Object.keys(errors).length===0){setFormErrors({});var formData={username:username,email:email,password:password};// console.log(formData)\naxios.post('https://dct-user-auth.herokuapp.com/users/register',formData).then(function(response){var result=response.data;if(result.hasOwnProperty('errors')){alert(result.message);}else{alert('Account successfully created');setUsername('');setEmail('');setPassword('');props.history.push('/login');}}).catch(function(err){window.alert(err.message);});}else{setFormErrors(errors);}};var handleChange=function handleChange(e){if(e.target.name===\"username\"){setUsername(e.target.value);}else if(e.target.name===\"email\"){setEmail(e.target.value);}else if(e.target.name===\"password\"){setPassword(e.target.value);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register with Us\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:username,onChange:handleChange,placeholder:\"Enter Username\"}),\" \",formErrors.username&&/*#__PURE__*/_jsx(\"span\",{children:formErrors.username}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"email\",value:email,onChange:handleChange,placeholder:\"Enter Email\"}),\" \",formErrors.email&&/*#__PURE__*/_jsx(\"span\",{children:formErrors.email}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:password,onChange:handleChange,placeholder:\"Enter Password\"}),\" \",formErrors.password&&/*#__PURE__*/_jsx(\"span\",{children:formErrors.password}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\"})]})]});};export default Register;","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/task-management-app/src/Components/Register.js"],"names":["React","useState","axios","validator","Register","props","username","setUsername","email","setEmail","password","setPassword","formErrors","setFormErrors","errors","runValidations","trim","length","isEmail","handleSubmit","e","preventDefault","Object","keys","formData","post","then","response","result","data","hasOwnProperty","alert","message","history","push","catch","err","window","handleChange","target","name","value"],"mappings":"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","sourcesContent":["import {React, useState} from \"react\";\nimport axios from 'axios'\nimport validator from 'validator';\n\nconst Register = (props) => {\n    \n    const [username, setUsername] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [formErrors, setFormErrors] = useState({})\n\n    const errors = {}\n\n    const runValidations = () => {\n        if(username.trim().length === 0){\n            errors.username = 'Name cannot be blank'\n        }\n        if(email.trim().length === 0){\n            errors.email = 'Email cannot be blank'\n        } else if (!validator.isEmail(email)) {\n            errors.email = \"Invalid email format\"\n        }\n        if(password.trim().length === 0){\n            errors.password = 'Password cannot be blank'\n        }\n    }\n\n    const handleSubmit = (e) => {\n        \n        e.preventDefault()\n        \n        runValidations()\n\n        if (Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n                username: username,\n                email: email,\n                password: password\n            }\n            \n            // console.log(formData)\n\n            axios.post('https://dct-user-auth.herokuapp.com/users/register', formData)\n            .then((response)=>{\n                const result = response.data\n                if (result.hasOwnProperty('errors')){\n                    alert(result.message)\n                } else {\n                    alert('Account successfully created')\n                    setUsername('')\n                    setEmail('')\n                    setPassword('')\n                    props.history.push('/login')\n                }\n            })\n            .catch((err)=>{\n                window.alert(err.message)\n            })\n\n        } else {\n            setFormErrors(errors)\n        }\n    }\n\n    const handleChange = (e) => {\n\n        if (e.target.name === \"username\"){\n            setUsername(e.target.value)\n        } else if (e.target.name === \"email\") {\n            setEmail(e.target.value)\n        } else if (e.target.name === \"password\") {\n            setPassword(e.target.value)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Register with Us</h2>\n            <form onSubmit={handleSubmit}>\n                <input \n                    type=\"text\" \n                    name=\"username\" \n                    value={username} \n                    onChange={handleChange} \n                    placeholder=\"Enter Username\"\n                    /> {formErrors.username && <span>{formErrors.username}</span>} <br/>\n                \n                <input \n                    type=\"text\" \n                    name=\"email\" \n                    value={email} \n                    onChange={handleChange} \n                    placeholder=\"Enter Email\"\n                    /> {formErrors.email && <span>{formErrors.email}</span>} <br/>\n                \n                <input \n                    type=\"password\" \n                    name=\"password\" \n                    value={password} \n                    onChange={handleChange} \n                    placeholder=\"Enter Password\"\n                    /> {formErrors.password && <span>{formErrors.password}</span>} <br/>\n                <input type=\"submit\"/>\n            </form>\n        </div>\n    )\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}