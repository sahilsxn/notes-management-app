{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/GitHub/React 2/notes-management-app/src/Components/Notebook.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport NoteForm from './NoteForm';\nimport NotesList from './NotesList';\nimport axios from '../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoteBook = props => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [notesList, setNotesList] = useState([]);\n  const [formErrors, setFormErrors] = useState({});\n  const errors = {};\n\n  const runValidations = () => {\n    if (title.trim().length === 0) {\n      errors.title = 'Title cannot be blank';\n    }\n  };\n\n  useEffect(() => {\n    axios.get('/api/notes', {\n      headers: {\n        'x-auth': localStorage.getItem('token')\n      }\n    }).then(response => {\n      const result = response.data;\n      const newArr = [...result];\n      const data = newArr.reverse();\n      setNotesList(data);\n      console.log(newArr);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []);\n\n  const handleChange = e => {\n    if (e.target.name === \"title\") {\n      setTitle(e.target.value);\n    } else if (e.target.name === \"body\") {\n      setBody(e.target.value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    runValidations();\n\n    if (Object.keys(errors).length === 0) {\n      setFormErrors({});\n      const formData = {\n        title: title,\n        body: body\n      };\n      console.log(formData);\n      axios.post('/api/notes', formData, {\n        headers: {\n          'x-auth': localStorage.getItem('token')\n        }\n      }).then(response => {\n        console.log(response.data);\n        const result = response.data;\n        setNotesList([result, ...notesList]);\n      }).catch(err => {\n        alert(err);\n      });\n      setTitle('');\n      setBody('');\n    } else {\n      setFormErrors(errors);\n    }\n  };\n\n  const removeItem = id => {\n    const result = notesList.filter(note => {\n      return note._id !== id;\n    });\n    setNotesList(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Signed In - My Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoteForm, {\n      title: title,\n      body: body,\n      handleChange: handleChange,\n      handleSubmit: handleSubmit,\n      formErrors: formErrors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notesList: notesList,\n      removeItem: removeItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NoteBook, \"GfCFX7VTQAVZrXzqRYtblyYUAJI=\");\n\n_c = NoteBook;\nexport default NoteBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteBook\");","map":{"version":3,"sources":["/Users/macbook/Documents/GitHub/React 2/notes-management-app/src/Components/Notebook.js"],"names":["React","useState","useEffect","NoteForm","NotesList","axios","NoteBook","props","title","setTitle","body","setBody","notesList","setNotesList","formErrors","setFormErrors","errors","runValidations","trim","length","get","headers","localStorage","getItem","then","response","result","data","newArr","reverse","console","log","catch","err","handleChange","e","target","name","value","handleSubmit","preventDefault","Object","keys","formData","post","alert","removeItem","id","filter","note","_id"],"mappings":"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","sourcesContent":["import {React, useState, useEffect} from \"react\";\nimport NoteForm from './NoteForm'\nimport NotesList from './NotesList'\nimport axios from '../config/axios';\n\nconst NoteBook = (props) => {\n\n    const [title, setTitle] = useState('')\n    const [body, setBody] = useState('')\n    const [notesList, setNotesList] = useState([])\n    const [formErrors, setFormErrors] = useState({})\n\n    const errors = {}\n\n    const runValidations = () => {\n        if(title.trim().length === 0){\n            errors.title = 'Title cannot be blank'\n        }\n    }\n\n    useEffect(()=>{\n        axios.get('/api/notes', {\n            headers: {\n                'x-auth': localStorage.getItem('token')\n            }\n        })\n        .then((response)=>{\n            const result = response.data\n            const newArr = [...result]\n            const data = newArr.reverse()\n            setNotesList(data)\n            console.log(newArr)\n        })\n        .catch((err)=>{\n            console.log(err)\n        })\n    },[])\n\n    const handleChange = (e) => {\n        if (e.target.name === \"title\"){\n            setTitle(e.target.value)\n        } else if (e.target.name === \"body\") {\n            setBody(e.target.value)\n        }\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        runValidations()\n\n        if (Object.keys(errors).length === 0) {\n            setFormErrors({})\n            const formData = {\n                title: title,\n                body:body\n            }\n            console.log(formData)\n            axios.post('/api/notes', formData, {\n                headers: {\n                    'x-auth': localStorage.getItem('token')\n                }\n            })\n            .then((response)=>{\n                console.log(response.data)\n                const result = response.data\n                setNotesList([result, ...notesList])\n            })\n            .catch((err)=>{\n                alert(err)\n            });\n            setTitle('')\n            setBody('');\n        } else {\n            setFormErrors(errors)\n        }\n    }\n\n    const removeItem = (id) => {\n        const result = notesList.filter(note=>{\n            return note._id !== id\n        })\n        setNotesList(result)\n    }\n\n    return (\n        <div>\n            <h1>Signed In - My Notes</h1>\n            <NoteForm title={title} body={body} handleChange={handleChange} handleSubmit={handleSubmit} formErrors={formErrors}/>\n            <NotesList notesList={notesList} removeItem={removeItem}/>\n        </div>\n    )\n}\n\nexport default NoteBook"]},"metadata":{},"sourceType":"module"}